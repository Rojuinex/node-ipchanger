// Generated by CoffeeScript 1.6.2
var ProxyServer, colors, db, hideMyAssGrabber, http, jsdom, mongoose, nodeTor, prop, proxy, qs, server, startServer, util;

colors = require('./colors');

for (prop in colors) {
  eval(prop + ' = colors[prop]');
}

http = require('http');

proxy = require('http-proxy');

nodeTor = require('../node_modules/node-Tor/lib/node-tor.js');

qs = require('querystring');

jsdom = require('jsdom');

util = require('util');

mongoose = require('mongoose');

hideMyAssGrabber = require('./proxyGrabbers/hidemyass');

mongoose.connect('mongodb://localhost/ipchanger');

db = mongoose.connection;

db.on('error', console.error.bind(console, 'connection error:'));

ProxyServer = null;

db.once('open', function() {
  var proxyServerSchema;

  proxyServerSchema = mongoose.Schema({
    'Last-Update': String,
    'ipaddress': String,
    'port': String,
    'country': String,
    "speed": String,
    "connectionTime": String,
    "ping": String,
    "from": String
  });
  proxyServerSchema.methods.pingServer = function() {};
  ProxyServer = mongoose.model('ProxyServer', proxyServerSchema);
  hideMyAssGrabber.setup(ProxyServer, db, mongoose);
  hideMyAssGrabber.update();
  hideMyAssGrabber.setUpdateInterval((1000 * 60 * 60) * 6);
  hideMyAssGrabber.autoUpdate(true);
  return startServer();
});

server = http.createServer(function(req, res) {
  req.on('data', function(data) {});
  return req.on('end', function() {
    res.writeHead(200, {
      "Content-Type": "text/plain"
    });
    res.write("Current proxy grabbers: \n\tHide My Ass\tDomain: hidemyass.com\tLast Updated: " + (hideMyAssGrabber.lastUpdated()) + "\tNext Update: " + (hideMyAssGrabber.nextUpdate()) + "\n");
    res.write("\nServers in database: \n");
    return ProxyServer.find(function(err, servers) {
      res.write(util.inspect(servers));
      return res.end("****************************************\n          No More Proxy Servers\n****************************************\n");
    });
  });
});

startServer = function() {
  logX(bgGreen + black, "\t\t\t\t\t\t\tStarting Server\t\t\t\t\t\t\t");
  return server.listen(8088);
};
